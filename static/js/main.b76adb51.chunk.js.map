{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","search","setSearch","img","setImg","error","setError","loading","setLoading","URL","getSreenshot","a","fetch","response","ok","useEffect","className","onSubmit","e","preventDefault","type","autoFocus","value","onChange","target","href","url","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA8EeA,MAzEf,WAEE,IACA,EAA4BC,mBAAS,6BAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACMC,EAAG,4DALO,mCAKP,gBAAuER,EAAvE,kCAEHS,EAAY,uCAAG,4BAAAC,EAAA,6DACnBT,EAAU,IACVI,GAAS,GACTE,GAAW,GAHQ,SAIII,MAAMH,GAJV,QAIbI,EAJa,QAKNC,IACXV,EAAOS,GACPL,GAAW,IAGXF,GAAS,GAVQ,2CAAH,qDA0BlB,OAPAS,qBAAU,WACRb,EAAU,IACVQ,MACA,IAKA,sBAAKM,UAAU,MAAf,UACE,8BACE,qBAAKA,UAAU,YAAf,SACE,uBAAMC,SAhBY,SAACC,GACzBA,EAAEC,iBACFT,KAcM,UACE,uBAAOU,KAAK,OACZC,WAAS,EACPC,MAAOrB,EACPsB,SAAU,SAACL,GAAD,OAAKhB,EAAUgB,EAAEM,OAAOF,UAEpC,wBAAQF,KAAK,SAAb,oCAKN,qBAAKJ,UAAU,OAAf,SACIT,GAAYF,GAQPA,GAASE,EACZ,qBAAKS,UAAU,YACdX,EACD,qBAAKW,UAAU,YAAf,SACE,4DAGF,GAdF,qBAAKA,UAAU,YAAf,SACGb,GACD,mBAAGsB,KAAMtB,EAAIuB,IAAKF,OAAO,SAAzB,SACE,qBAAKG,IAAKxB,EAAIuB,IAAKE,IAAI,yBChDtBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b76adb51.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n\n  const API_KEY = \"adc8e3ff6947476e9b7bcfcc20a5e01b\"\n  const [search, setSearch] = useState(\"https://www.brescadc.com/\");\n  const [img, setImg] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const URL = `https://api.apiflash.com/v1/urltoimage?access_key=${API_KEY}&url=${search}&full_page=\"true\"&fresh=\"true\"`;\n\n  const getSreenshot = async() => {\n    setSearch(\"\");\n    setError(false);\n    setLoading(true);\n    const response = await fetch(URL);\n    if (response.ok){\n      setImg(response);\n      setLoading(false);\n    }\n    else{\n      setError(true);\n    }\n  }\n\n  const searchScreenShots = (e) => {\n    e.preventDefault();\n    getSreenshot();\n  };\n\n  useEffect(()=>{\n    setSearch(\"\");\n    getSreenshot();\n  },[])\n\n  \n  \n  return (\n    <div className=\"App\">\n      <nav>\n        <div className=\"container\">\n          <form onSubmit={searchScreenShots}>\n            <input type=\"text\"\n            autoFocus\n              value={search}\n              onChange={(e)=>setSearch(e.target.value)}\n            />\n            <button type=\"submit\">Take Screenshot</button>\n          </form>\n        </div>\n      </nav>\n\n      <div className=\"hero\">\n        {!loading && !error ? (\n          <div className=\"container\">\n            {img && (\n            <a href={img.url} target=\"_blank\">\n              <img src={img.url} alt=\"background\" />   \n            </a>\n          )} \n          </div>\n          ) : !error && loading ? (\n            <div className=\"loading\"></div> \n          ): error ? (\n            <div className=\"container\">\n              <h2>Please Enter a Valid URL</h2>\n            </div>\n          ) : (\n            \"\"\n          )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}